// Code generated by MockGen. DO NOT EDIT.
// Source: pthd-notifications/pkg (interfaces: INotificationsRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	entities "pthd-notifications/pkg/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockINotificationsRepo is a mock of INotificationsRepo interface.
type MockINotificationsRepo struct {
	ctrl     *gomock.Controller
	recorder *MockINotificationsRepoMockRecorder
}

// MockINotificationsRepoMockRecorder is the mock recorder for MockINotificationsRepo.
type MockINotificationsRepoMockRecorder struct {
	mock *MockINotificationsRepo
}

// NewMockINotificationsRepo creates a new mock instance.
func NewMockINotificationsRepo(ctrl *gomock.Controller) *MockINotificationsRepo {
	mock := &MockINotificationsRepo{ctrl: ctrl}
	mock.recorder = &MockINotificationsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINotificationsRepo) EXPECT() *MockINotificationsRepoMockRecorder {
	return m.recorder
}

// GetByDiscordId mocks base method.
func (m *MockINotificationsRepo) GetByDiscordId(arg0 int64) (*entities.NotificationSettings, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByDiscordId", arg0)
	ret0, _ := ret[0].(*entities.NotificationSettings)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByDiscordId indicates an expected call of GetByDiscordId.
func (mr *MockINotificationsRepoMockRecorder) GetByDiscordId(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByDiscordId", reflect.TypeOf((*MockINotificationsRepo)(nil).GetByDiscordId), arg0)
}
